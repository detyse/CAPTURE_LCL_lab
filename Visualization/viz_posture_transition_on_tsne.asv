function viz_posture_transition_on_tsne_preview(analysisstruct, cmapname)
%VIZ_POSTURE_TRANSITION_ON_TSNE_PREVIEW  在 t-SNE 空间实时预览“时间渐变”轨迹
%
%   viz_posture_transition_on_tsne_preview(analysisstruct)
%   viz_posture_transition_on_tsne_preview(analysisstruct,'turbo')
%
% INPUT
%   analysisstruct.frames_with_good_tracking : 1×2 cell
%          {1} -> N×1  需要播放的帧号（按照时间顺序）
%   analysisstruct.zValues                  : F×2  每帧的 t-SNE 坐标
%
%   cmapname  (可选) : 颜色表名称或 n×3 数组，默认 'parula'
%
% 无返回值 —— 直接在 figure 中预览

% ----------- 1. 取索引 & 坐标 ----------------
if isfield(analysisstruct,'frames_with_good_tracking') ...
        && ~isempty(analysisstruct.frames_with_good_tracking)
    idx = analysisstruct.frames_with_good_tracking{2};   % N×1
else                      % 如果未提供，则播放全部帧
    idx = (1:size(analysisstruct.zValues,1))';
end

Y = analysisstruct.zValues(idx, :);     % N×2
n = size(Y,1);                          % 帧数检查
if n < 2
    error('播放序列少于 2 帧，无法绘制轨迹！');
end

% ----------- 2. 生成一次性渐变色 ----------------
if nargin < 2 || isempty(cmapname)
    cmap = parula(n);                   % 默认 colormap
elseif ischar(cmapname) || isstring(cmapname)
    cmap = feval(cmapname,n);           % 传入名称，如 'turbo'
elseif isnumeric(cmapname) && size(cmapname,1) >= n && size(cmapname,2) == 3
    cmap = cmapname(1:n,:);             % 直接给出颜色矩阵
else
    error('cmapname 必须是 colormap 名称或 n×3 RGB 数组');
end

% ----------- 3. 建窗口 --------------------------
fig = figure('Name','t-SNE time-gradient preview','Color','w');
ax  = axes('Parent',fig);  hold(ax,'on');

% 坐标轴 & 颜色条
axis(ax,'equal');
xlim(ax,[min(Y(:,1)) max(Y(:,1))]);
ylim(ax,[min(Y(:,2)) max(Y(:,2))]);
title(ax,'t-SNE posture transition (time-gradient)');
colormap(ax,cmap);                      % 仅一次
colorbar(ax,'southoutside');            % 显示时间渐变条

% ----------- 4. 初始化当前帧标记 ---------------
curr = scatter(ax, Y(1,1), Y(1,2), 60, 'filled', ...
               'MarkerFaceColor','r','MarkerEdgeColor','k');

% ----------- 5. 动画主循环 ---------------------
for k = 2:n
    % 画“上一帧→当前帧”这一段，用对应颜色
    line(ax, Y(k-1:k,1), Y(k-1:k,2), ...
             'Color', cmap(k,:), 'LineWidth', 1.5m, '');

    % 更新当前点
    curr.XData = Y(k,1);
    curr.YData = Y(k,2);

    drawnow limitrate                   % 实时刷新但不过度占用 CPU

    % 若想按真实时间戳播放，可在此处 pause(diff(t(k-1:k)))
end

disp('✓  预览结束');
end